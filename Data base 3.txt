

CREATE TABLE users (
    user_id NUMBER(10) PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE user_passwords (
    user_id INTEGER PRIMARY KEY REFERENCES users(user_id),
    password_hash VARCHAR(100) NOT NULL,
    salt VARCHAR(100) NOT NULL
);

CREATE TABLE cities (
    city_id NUMBER(10) PRIMARY KEY,
    city_name VARCHAR(100) NOT NULL,
    country VARCHAR(100) NOT NULL
);

CREATE TABLE cars (
    car_id VARCHAR2(50) PRIMARY KEY,
    make VARCHAR2(50) NOT NULL,
    model VARCHAR2(50) NOT NULL,
    year INTEGER NOT NULL,
    availability VARCHAR2(1) DEFAULT 'Y' CHECK (availability IN ('Y', 'N'))
);

CREATE TABLE car_cities (
    car_id VARCHAR(50), 
    city_id INTEGER,
    city_name VARCHAR(100) NOT NULL,
    PRIMARY KEY (car_id, city_id),
    FOREIGN KEY (car_id) REFERENCES cars(car_id),
    FOREIGN KEY (city_id) REFERENCES cities(city_id)
);
CREATE TABLE reservations (
    reservation_id NUMBER(10) PRIMARY KEY,
    user_id INTEGER REFERENCES users(user_id),
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    total_amount DECIMAL(10, 2) NOT NULL,
    status VARCHAR(20) DEFAULT 'Pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE reservation_cars (
    reservation_id INTEGER REFERENCES reservations(reservation_id),
    car_id VARCHAR(50) REFERENCES cars(car_id), -- Adjust the size (50) as needed
    PRIMARY KEY (reservation_id, car_id)
);

CREATE TABLE car_availability (
    availability_id NUMBER(10) PRIMARY KEY,
    car_id VARCHAR(50) REFERENCES cars(car_id),
    city_id INTEGER REFERENCES cities(city_id),
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    available VARCHAR2(1) DEFAULT 'Y' CHECK (available IN ('Y', 'N')),
    CONSTRAINT valid_availability_dates CHECK (start_date <= end_date),
    CONSTRAINT unique_availability UNIQUE (car_id, city_id, start_date, end_date)
);

